"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Loader2 } from "lucide-react";
import type { PromptData } from "@/types/prompt";

interface AutoGenerateDialogProps {
  onGenerate: (data: Partial<PromptData>) => void;
}

export function AutoGenerateDialog({ onGenerate }: AutoGenerateDialogProps) {
  const [open, setOpen] = useState(false);
  const [loading, setLoading] = useState(false);
  const [brief, setBrief] = useState({
    niche: "",
    audience: "",
    mainTopic: "",
    description: ""
  });

  const handleSubmit = async () => {
    setLoading(true);
    try {
      const response = await fetch("/api/generate", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(brief),
      });

      if (!response.ok) throw new Error("Failed to generate");

      const data = await response.json();
      onGenerate(data.content);
      setOpen(false);
    } catch (error) {
      console.error("Generation failed:", error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <Dialog open={open} onOpenChange={setOpen}>
      <DialogTrigger asChild>
        <Button variant="outline" className="w-full">
          Auto Generate Content
        </Button>
      </DialogTrigger>
      <DialogContent className="sm:max-w-[425px] bg-gray-950 text-white">
        <DialogHeader>
          <DialogTitle>Generate Course Content</DialogTitle>
        </DialogHeader>
        <div className="space-y-4 mt-4">
          <div>
            <Label>Niche/Industry</Label>
            <Input
              value={brief.niche}
              onChange={(e) => setBrief({ ...brief, niche: e.target.value })}
              placeholder="e.g., Digital Marketing, Real Estate"
              className="bg-white/10 border-purple-500/30"
            />
          </div>
          <div>
            <Label>Target Audience</Label>
            <Input
              value={brief.audience}
              onChange={(e) => setBrief({ ...brief, audience: e.target.value })}
              placeholder="e.g., Small Business Owners, Freelancers"
              className="bg-white/10 border-purple-500/30"
            />
          </div>
          <div>
            <Label>Main Topic</Label>
            <Input
              value={brief.mainTopic}
              onChange={(e) => setBrief({ ...brief, mainTopic: e.target.value })}
              placeholder="e.g., Social Media Marketing, Lead Generation"
              className="bg-white/10 border-purple-500/30"
            />
          </div>
          <div>
            <Label>Brief Description</Label>
            <Textarea
              value={brief.description}
              onChange={(e) => setBrief({ ...brief, description: e.target.value })}
              placeholder="Describe what you want to teach or sell..."
              className="bg-white/10 border-purple-500/30 min-h-[100px]"
            />
          </div>
          <Button 
            onClick={handleSubmit} 
            className="w-full"
            disabled={loading}
          >
            {loading ? (
              <>
                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                Generating...
              </>
            ) : (
              "Generate"
            )}
          </Button>
        </div>
      </DialogContent>
    </Dialog>
  );
}